.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
.inp-box {
  color: white;
  background: rgb(29, 29, 34);
}

.btn:hover {
  background-color: white;
  color: black;
  border: 2px solid white;
}
.grid-container {
  display: grid;
  grid-template-columns: 1fr 1fr; 
  grid-gap: 16px; 
}
.input-container {
  display: flex;
  align-items: center; /* Vertically center the items */
  gap: 16px; /* Adjust the spacing between the items */
}
/* Define the styles for the animated box */
.animated-box {
  transition: background-color 0.3s ease, transform 0.3s ease;
  cursor: pointer;
}

/* Add hover effect */
.animated-box:hover {
  background-color: #05021c; /* Change background color on hover */
  transform: scale(1.05); /* Add a slight scaling effect on hover */
  transition: background-color 0.3s ease, transform 0.3s ease;
}

/* Define the fade-in animation */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Apply the fade-in animation to the box */
.animated-box {
  animation: fadeIn 0.5s ease-in-out; /* Add fade-in effect */
  animation-fill-mode: forwards; /* Keep the final state after the animation */
}
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++ */
/* Add hover effect */
.code-animated-box:hover {
  background-color: #05021c; /* Change background color on hover */
  transform: scale(1.05); /* Add a slight scaling effect on hover */
  transition: background-color 0.3s ease, transform 0.3s ease;
}

/* Define the fade-in animation */
@keyframes codefadeIn {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Apply the fade-in animation to the box */
.code-animated-box {
  animation: codefadeIn 0.5s ease-in-out; /* Add fade-in effect */
  animation-fill-mode: forwards; /* Keep the final state after the animation */
}

/* ++++++++++++++==================================================================== */
/* CSS for the animated-box class */
.op-animated-box {
  /* Basic styling */
  transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
}

.op-animated-box:hover {
  /* Apply a scale and opacity transformation on hover */
  transform: scale(1.05);
  opacity: 0.9;
}

/* Keyframes animation for continuous rotation */
@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Apply the rotate animation */
.op-animated-box.rotate {
  animation: rotate 5s linear infinite;
}

/* Keyframes animation for color change */
@keyframes changeColor {
  0% {
    background-color: #000000;
  }
  50% {
    background-color: #010314;
  }
  100% {
    background-color: #000000;
  }
}

/* Apply the changeColor animation */
.op-animated-box.color-change {
  animation: changeColor 5s ease-in-out infinite;
}

/* +++++++++++++++++++++++++++++===========================++++++++++++++++++
++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++ */

/* CSS for the animated-box class */
.st-animated-box {
  /* Add a hover effect to change the background color and scale on hover */
  transition: background-color 0.3s ease-in-out, transform 0.3s ease-in-out;
}

.st-animated-box:hover {
  background-color: #333; /* Change the background color on hover */
  transform: scale(1.05); /* Scale up the box on hover */
  cursor: pointer; /* Change the cursor to a pointer on hover */
}

/* Add a pulse animation effect */
@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}

/* Apply the pulse animation */
.st-animated-box.pulse {
  animation: pulse 1s ease-in-out infinite;
}

/* Add a text color change animation */
@keyframes textColorChange {
  0% {
    color: green;
  }
  50% {
    color: orange;
  }
  100% {
    color: green;
  }
}

/* Apply the text color change animation */
.st-animated-box.text-color-change {
  animation: textColorChange 2s ease-in-out infinite;
}

/********************************Mobile Responsive*******************************************************/
/* Define CSS styles for mobile responsiveness */
@media screen and (max-width: 768px) {
  /* Adjust the layout of the grid-container for smaller screens */
  .grid-container {
    display: flex;
    flex-direction: column;
  }

  /* Adjust the width of left and right sections */
  .left-section,
  .right-section {
    width: 100%; /* Full width on smaller screens */
  }

  /* Center align the h1 text */
  .animated-box h1 {
    text-align: center;
  }

  /* Adjust the width and margin of the language dropdown and button in the left section */
  .input-container {
    display: flex;
    flex-direction: column;
  }
  .input-container > * {
    width: 100%; /* Full width on smaller screens */
    margin: 5px 0; /* Add some margin for spacing */
  }

  /* Adjust the height of the MonacoEditor for smaller screens */
  .code-animated-box .monaco-editor {
    height: 200px; /* Adjust the height as needed */
  }

  /* Center align buttons in the left section */

  /* Adjust the height and margin of the status box in the right section */
  .st-animated-box {
    height: auto; /* Allow height to adjust based on content */
    margin-bottom: 10px; /* Add some margin at the bottom */
  }

  /* Adjust the height of the output box in the right section */
  .op-animated-box {
    height: auto; /* Allow height to adjust based on content */
  }
}
